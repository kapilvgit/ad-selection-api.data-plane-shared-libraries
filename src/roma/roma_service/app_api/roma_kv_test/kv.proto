// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package privacysandbox.roma.app_api.kv_test.v1;

import "apis/privacysandbox/apis/roma/app_api/v1/options.proto";

service KeyValueService {
  option (privacysandbox.apis.roma.app_api.v1.roma_svc_annotation) = {
    name: 'Key/Value Server',
    code_id: "app_api_roma_app_test_v1",
    description: 'A key-value server built to operate within Trusted Execution Environments',
    cpp_namespace: 'privacysandbox::kvserver::roma_app_api',
    romav8_app_name: 'KvServer'
  };

  rpc GetValues(GetValuesRequest) returns (GetValuesResponse) {
    option (privacysandbox.apis.roma.app_api.v1.roma_rpc_annotation) = {
      description: 'MethodAnnotation'
    };
  }
}

message GetValuesRequest {
  string key1 = 1;
  string key2 = 2;
  repeated string keys = 3;
}

message GetValuesResponse {
  string value = 1;
  repeated string vals = 2;
  Foo foo = 3;
  repeated Foo foos = 4;
}

message Foo {
  int32 foobar1 = 1;
  string foobar2 = 2;
}
